@page
@model simple_chat_csharp.Pages.IndexModel
@{
    ViewData["Title"] = "Chat";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Simple Chat</h4>
                </div>
                <div class="card-body">
                    <div id="chat" class="chat-box">
                        <ul id="messages" class="list-unstyled">
                            @foreach (var message in Model.Messages)
                            {
                                <li class="message">
                                    <strong>@message.User:</strong> @message.Text
                                    <small class="text-muted d-block">@message.Timestamp.ToString("HH:mm")</small>
                                </li>
                            }
                        </ul>
                    </div>
                    <div class="input-group mt-3">
                        <input type="text" id="userInput" class="form-control" placeholder="Your name" />
                        <input type="text" id="messageInput" class="form-control" placeholder="Type a message" />
                        <button id="sendButton" class="btn btn-primary">Send</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.11/signalr.min.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub")
        .build();

    connection.on("ReceiveMessage", (user, message) => {
        const li = document.createElement("li");
        li.className = "message";
        li.innerHTML = `<strong>${user}:</strong> ${message} <small class="text-muted d-block">${new Date().toLocaleTimeString()}</small>`;
        document.getElementById("messages").appendChild(li);
        // Rolagem automática para a última mensagem
        document.getElementById("chat").scrollTop = document.getElementById("chat").scrollHeight;
    });

    connection.start().catch(err => console.error(err.toString()));

    document.getElementById("sendButton").addEventListener("click", event => {
        const user = document.getElementById("userInput").value;
        const message = document.getElementById("messageInput").value;
        if (user && message) {
            connection.invoke("SendMessage", user, message).catch(err => console.error(err.toString()));
            document.getElementById("messageInput").value = "";
        }
        event.preventDefault();
    });

    document.getElementById("messageInput").addEventListener("keypress", event => {
        if (event.key === "Enter") {
            document.getElementById("sendButton").click();
        }
    });
</script>

<style>
    .chat-box {
        height: 400px;
        overflow-y: auto;
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 10px;
        background-color: #f9f9f9;
    }

    .message {
        margin-bottom: 10px;
        padding: 10px;
        border-radius: 5px;
        background-color: #fff;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }

    .message strong {
        color: #007bff;
    }

    .message small {
        font-size: 0.8em;
        color: #6c757d;
    }

    .input-group {
        margin-top: 10px;
    }
</style>